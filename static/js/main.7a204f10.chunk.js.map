{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","undefined","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a204f10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1TYy6\",\"card\":\"Cards_card__BemK8\",\"infected\":\"Cards_infected__28UJc\",\"recovered\":\"Cards_recovered__hq8Ck\",\"deaths\":\"Cards_deaths__3ksNh\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ( {data: { confirmed, recovered, deaths, lastUpdate }} ) => {\r\n    if(confirmed === undefined){\r\n        return(\r\n            \"loading..\"\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async () => {\r\n    try{\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(url);\r\n        \r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n        \r\n    } catch(err) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        \r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = () => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    });    \r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n            <Line\r\n            data ={{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n                }]\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nconst CountryPicker = () => {\r\n    return(\r\n        <h1>CountryPicker</h1>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\n// import Cards from './components/Cards/Cards';\r\n// import Chart from './components/Chart/Chart';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    render(){\r\n        const {data} = this.state;        \r\n        \r\n        return (\r\n            <div className={styles.container}>\r\n                <Cards data={data}/>\r\n                <Chart />\r\n                <CountryPicker />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1m1k5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3IoTZ\"};"],"sourceRoot":""}